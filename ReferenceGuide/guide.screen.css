/* Core Styles */

:root {
    --primary: #ddd;
    --dark: #333;
    --light: #ccc;
    --shadow: 0 1px 5 px rgba(104, 104, 104, 0.8);
    
}
html {
    box-sizing: border-box;
    font-family: Arial, Helvetica, sans-serif;
    color: var(--dark);
}

body {
    background: #ccc;
    margin: 20px 40px;
    line-height: 1.4;
    font-size: 0.875em;
}

.btn {
  background: var(--dark);
  color: var(--light);  
  padding: 0.6rem 1.3rem;  
  text-decoration: none;
  border: 0;
}




/* Navigation */
.main-nav ul{
    display: grid;
    grid-gap: 10px;
    padding: 0;
    list-style: none;
    grid-template-columns: repeat(3, 1fr);
}
.main-nav a {
    background: var(--primary);
    display: block;
    text-decoration: none;
    padding: 0.8rem;
    text-align: center;
    color: var(--dark);
    text-transform: uppercase;
    font-size: .8rem;
    box-shadow: var(--shadow);
}
.main-nav a:hover {
    background: var(--dark);
    color: var(--light);
}

ol.collection {
    margin: 0px;
    padding: 0px;
    text-align: center;
}

li {
    list-style: none;
}

* {
    box-sizing: border-box;
}

/* 2 Column Card Layout */
@media screen and (max-width: 736px) {
    .collection-container {
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-gap: 15px;
    }

    .item {
        border: 1px solid gray;
        border-radius: 2px;
        padding: 6px;
    }

    /* Don't display the first item, since it is used to display the header for tabular layouts*/
    .collection-container>li:first-child {
        display: none;
    }

    .attribute::before {
        content: attr(data-name);
    }

    /* Attribute name for first column, and attribute value for second column. */
    .attribute {
        display: grid;
        grid-template-columns: minmax(9em, 30%) 1fr;
    }
}

/* 1 Column Card Layout */
@media screen and (max-width:580px) {
    .collection-container {
        display: grid;
        grid-template-columns: 1fr;
    }
}

/* Tabular Layout */
@media screen and (min-width: 737px) {
    /* The maximum column width, that can wrap */
    .item-container {
        display: grid;
        grid-template-columns: 1fr 1fr 4fr 1fr 1fr 1fr 1fr 1fr 1fr;
        /*grid-column: 2 / span 4;*/
    }

    .attribute-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(var(--column-width-min), 1fr));
    }

    /* Definition of wrapping column width for attribute groups. */
    
    .part-id {
        --column-width-min: 4em;
    }

    .machine {
        --column-width-min: 4em;
    }

    .links {
        --column-width-min: 7em;
    }

    .chemical {
        --column-width-min: 6em;
    }

    
    .collection {
        border-top: 1px solid gray;
    }
    
        
    /* In order to maximize row lines, only display one line for a cell */
    .attribute {
        border-right: 1px solid gray;
        border-bottom: 1px solid gray;
        padding: 2px;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    /* There are the "header" rows */

    .collection-container>.item-container:first-child, li:nth-of-type(15) > div {
        background-color: #06b;
        color: white;
        font-weight: bold;
    }

    .item-container:hover {
        background-color: rgb(200, 227, 252);
    }

    /* Center header labels */
    .collection-container>.item-container:first-child .attribute {
        display: flex;
        align-items: center;
        justify-content: center;
        text-overflow: initial;
        overflow: auto;
        white-space: normal;
    }
}